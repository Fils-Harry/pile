import statsmodels.api as sm

# Liste de vos 5 dataframes, remplacez-les par vos propres dataframes
dataframes = [your_data_1, your_data_2, your_data_3, your_data_4, your_data_5]

# Dictionnaire pour stocker les modèles finaux
final_models = {}

# Boucle pour itérer sur les dataframes
for i, data in enumerate(dataframes, start=1):
    print(f"Traitement du dataframe {i}...")
    
    # Séparez la variable réponse (y) des variables explicatives (X)
    y = data['response']  # Remplacez 'response' par le nom de votre variable réponse
    X = data.drop(columns=['response'])  # Supprimez la variable réponse des variables explicatives
    
    selected_vars = []  # Liste pour stocker les variables sélectionnées
    
    while True:
        best_aic = float('inf')
        best_var = None
        
        for var in X.columns:
            candidate_vars = selected_vars + [var]
            model = sm.GLM(y, sm.add_constant(data[candidate_vars]), family=sm.families.Gaussian())
            results = model.fit()
            aic = results.aic
            
            if aic < best_aic:
                best_aic = aic
                best_var = var
        
        if best_var is None:
            break
        
        selected_vars.append(best_var)
    
    # Créez le modèle final avec les variables sélectionnées
    final_model = sm.GLM(y, sm.add_constant(data[selected_vars]), family=sm.families.Gaussian())
    
    # Nommez la variable finale en utilisant l'index (1-based)
    final_models[f'final_model_{i}'] = final_model
    
    # Affichez le résumé du modèle final
    print(final_model.summary())
